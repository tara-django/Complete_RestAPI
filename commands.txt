For first time in new PC:

pip install pipenv

For Every Project:

creating virtual environment:

pipenv --python 3.7

Install Django in virtual environment:

pipenv install django

To active virtual env:

pipenv shell

Start django proect:

django-admin startproject news_portal . 
("." is used for current directory)

#To create a app
python manage.py startapp app_name

Migration related Commands

python manage.py makemigrations # if new models is created or have changes in existing models
python manage.py migrate # to migrate model in physical database

To see migrated sql queries
python manage.py sqlmigrate app_name prefix_of_file_name
example:
python manage.py sqlmigrate auth 0001

To create Super user:
python manage.py createsuperuser

# To serve all static file during deployment
python manage.py collectstatic

GIT Commands

1. git status # to see changes
2. git diff # to compare old and new codes
3. git add . # to track newly created and modifided file and folders. "." means all
4. git commit -m "Your commit message" # -m means message flag
5. git commit -am "Your commit message" # -am track modified files and add message
6. git push origin master # push my current branch in remote master branch
7. git branch # list all branches
8. git checkout branch_name # checkout to branch_name
9. git checkout -b branch_name # create new branch named branch_name and checkout to branch_name


DOCKER COMMANDS:
1. docker build -t image_name:image_tag . #it builds image using dockerfile which is in current directory
e.g: docker build -t news_portal:v0 . 

2. docker build --pull --no-cache -t image_name:image_tag . #pull required images without using cache 

3. docker run -p 80:8000 news_portal:v0 # run container of image news_portal:v0 at 8000 port inside container and expose port 80 to system

4. docker run --env-file .env -p 80:8000 news_portal:v0 #use .env file to export environment variable
